services:
  ollama:
    image: ollama/ollama:latest
    container_name: ollama-server
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    restart: unless-stopped
   # deploy:
   #   resources:
   #     reservations:
   #       devices:
   #         - driver: nvidia
   #           count: all
   #           capabilities: [gpu]

  embedding-service:
    build: ./embedding-service
    container_name: embedding-service
    ports:
      - "8080:8080"
    environment:
      - FLASK_ENV=production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mcp-filesystem:
    build: ./mcp-server
    container_name: mcp-filesystem-server
    ports:
      - "3000:3000"
    volumes:
      - ./shared-data/context-files:/workspace
    environment:
      - NODE_ENV=production
      - EMBEDDING_SERVICE=http://embedding-service:8080
    depends_on:
      embedding-service:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  flask-app:
    build: ./flask-app
    container_name: flask-ai-interface
    ports:
      - "5000:5000"
    volumes:
      - ./shared-data:/app/shared-data
    environment:
      - FLASK_ENV=production
      - OLLAMA_HOST=http://ollama:11434
      - MCP_SERVER_URL=http://mcp-filesystem:3000
      - EMBEDDING_SERVICE_URL=http://embedding-service:8080
    depends_on:
      - ollama
      - mcp-filesystem
    restart: unless-stopped

volumes:
  ollama_data: